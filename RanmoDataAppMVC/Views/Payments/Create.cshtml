@model RanmoDataAppMVC.ViewModels.Payments

@{
    ViewBag.Title = "Create";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Add new Payment Record</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @*@Html.LabelFor(model => model.InvoiceNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InvoiceNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InvoiceNumber, "", new { @class = "text-danger" })
            </div>*@

        @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBox("CustomerName", "", new { @class = "form-control" })
            @Html.Hidden("CustomerId")

            @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
        </div>

        @*<br />
            <br />
            <hr />
            <div class="form-group">
                @Html.Label(" ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    <div class="card-header" id="headingTwo">

                        <button class="btn btn-link collapsed" type="button" data-toggle="collapse" data-target="#collapseTwo"
                                aria-expanded="false" aria-controls="collapseTwo">
                            <font color="red">Invoice Details</font>
                        </button>
                        <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionExample">
                            <div class="col-md-8">
                                <form id="NewRejectedReasonForm">
                                    <div class="modal-body">
                                        <div class="form-horizontal">


                                            <table id="detailsTableRej" class="table table-sm table-bordered table-condensed">
                                                <thead>
                                                    <tr>
                                                        <th style="width:55%">Customer</th>
                                                        <th style="width:15%">InvoiceDate</th>
                                                        <th style="width:15%">InvoiceAmount</th>
                                                        <th style="width:15%">Amount</th>

                                                    </tr>
                                                </thead>
                                                <tbody>

                                                    <tr>
                                                        <td>
                                                            <input type="text" id="CustomerName" readonly="true" />
                                                        </td>
                                                        <td>
                                                            <input type="text" id="InvoiceDate" readonly="true" />
                                                        </td>
                                                        <td>
                                                            <input type="text" id="InvoiceAmount" readonly="true" />
                                                        </td>
                                                        <td>
                                                            <input type="text" id="Amount" readonly="true" />
                                                        </td>
                                                    </tr>

                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>


            </div>

            <hr />*@


    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReceiptNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReceiptNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReceiptNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PaidDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PaidDate, new { htmlAttributes = new { @class = "form-control oso", @type = "date" } })
            @Html.ValidationMessageFor(model => model.PaidDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PaidById, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.PaidById, Model.PaidByList, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PaidById, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ChequeDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ChequeDate, new { htmlAttributes = new { @class = "form-control oso", @type = "date" } })
            @Html.ValidationMessageFor(model => model.ChequeDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ChequeNum, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ChequeNum, new { htmlAttributes = new { @class = "form-control oso" } })
            @Html.ValidationMessageFor(model => model.ChequeNum, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReceivedDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReceivedDate, new { htmlAttributes = new { @class = "form-control oso", @type = "date" } })
            @Html.ValidationMessageFor(model => model.ReceivedDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Payment Status", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.PaymentStatusId, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.DropDownListFor(m => m.PaymentStatusId, Model.PaymentStatusList, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PaymentStatusId, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.PayAnyUnPaid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PayAnyUnPaid)
                    @Html.ValidationMessageFor(model => model.PayAnyUnPaid, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

    @*<div class="form-group">
        @Html.LabelFor(model => model.AmountRemaining, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AmountRemaining, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.AmountRemaining, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>



@section scripts {

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <link href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" rel="stylesheet" />
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <style>
        .ui-autocomplete-loading {
            background: white url("http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.2/themes/smoothness/images/ui-anim_basic_16x16.gif") right center no-repeat;
        }
    </style>
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>


    <script>

    $(document).ready(function() {
            $("#CustomerName").autocomplete({
                source: function(request, response) {
                    $.ajax({
                        url: '@Url.Action("GetCustomers", "Customers")',
                        datatype: "json",
                        data: {
                            term: request.term
                        },
                        success: function(data) {
                            response($.map(data, function(val, item) {
                                return {
                                    label: val.CustomerName,
                                    value: val.CustomerName,
                                    CustomerId: val.CustomerId
                                }
                            }))
                        }
                    })
                },
                select: function(event, ui) {
                    $("#CustomerId").val(ui.item.CustomerId);
                }
            });
        });




$(document).ready(function() {
    $("#InvoiceNumber1").autocomplete({
        source: function(request, response) {
            $.ajax({
                url: '@Url.Action("GetInvoices", "Payments")',
                datatype: "json",
                data: {
                    term: request.term
                },
                success: function(data) {
                    response($.map(data, function(val, item) {
                        return {
                            label: val.InvoiceNumber,
                            value: val.InvoiceNumber,
                            InvoiceId: val.InvoiceId
                        }
                    }))
                }
            })
        },
        //select: function(event, ui) {
        //    $("#InvoiceId").val(ui.item.InvoiceId);
        //}
                select: function (event, ui) {
        $.ajax({
            url: '@Url.Action("GetCustomersD", "Payments")',
            data: { id: ui.item.CustomerId },
            success: function (data) {
                console.log(data);
                $('#Tel').val(data.Tel);
            }
        });
    }

    });
});


$(document).ready(function() {
    $("#InvoiceNumber").autocomplete({
        source: function(request, response) {
            $.ajax({
                url: '@Url.Action("GetInvoices", "Payments")',
                datatype: "json",
                data: {
                    term: request.term
                },
                success: function(data) {
                    response($.map(data, function(val, item) {
                        return {
                            label: val.InvoiceNumber,
                            value: val.InvoiceNumber,
                            InvoiceId: val.InvoiceId
                        }
                    }))
                }
            })
        },
        select: function (event, ui) {
        $.ajax({
            url: '@Url.Action("GetInvoiceDetails", "Payments")',
            data: { id: ui.item.InvoiceId },
            success: function (data) {
                //console.log(data.CustomerName);

                $('#InvoiceDate').val(convertToJavaScriptDate(data.InvoiceDate));
                $('#InvoiceAmount').val(data.InvoiceAmount.toFixed(2));
                $('#CustomerName').val(data.CustomerName);
                $('#AmountPaid').val(data.TotalAlreadyPaid.toFixed(2));
            }
        });
    }
    });
});

        function convertToJavaScriptDate(value) {
            var pattern = /Date\(([^)]+)\)/;
            var results = pattern.exec(value);
            var dt = new Date(parseFloat(results[1]));
            return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
        }
    </script>
}




