@*https://stackoverflow.com/questions/5212751/how-can-i-get-id-of-inserted-entity-in-entity-framework*@
 

@model RanmoDataAppMVC.Models.Production

@{
    ViewBag.Title = "Create";
}

<h3>Add new Production Data</h3>
<br />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.Label("Work Start Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.WorkStartDate, new { htmlAttributes = new { @class = "form-control oso", @type = "date" } })
                @Html.ValidationMessageFor(model => model.WorkStartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Shift", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.DropDownListFor(m => m.ShiftDN, new List<SelectListItem>
{
new SelectListItem{ Text="Day", Value = "Day" },
new SelectListItem{ Text="Night", Value = "Night" }
}, new { @class = "form-control  col-md-2" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Machine", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.DropDownListFor(m => m.MachineId, (SelectList)ViewBag.MachineNames, new { @class = "form-control col-md-2" })
                @Html.HiddenFor(m => m.MachineId)
            </div>
        </div>


        <div class="form-group">
            @Html.Label("Item (Type part of name)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.ItemName, new { @class = "form-control" })
                @*@Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })*@
                @Html.HiddenFor(m => m.ItemId)
            </div>
            <div class="col-md-4">
                <div class="card-header" id="headingOne">
                    <button class="btn btn-link  collapsed" type="button" data-toggle="collapse" data-target="#collapseOne"
                            aria-expanded="false" aria-controls="collapseOne">
                        Filter Items List by <font color="red">Items For</font> and <font color="red">Active Status</font>
                    </button>
                    <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordionExample">
                        @Html.DropDownList("ItemFor", (SelectList)ViewBag.ItemForList, "Any", new { @class = "form-control col-md-4" })
                        @Html.DropDownList("activeStatus", new List<SelectListItem>
                                                        {
                                                        new SelectListItem{ Text="Any", Value = "-1", Selected = true },
                                                        new SelectListItem{ Text="Active", Value = "1" },
                                                        new SelectListItem{ Text="Not-Active", Value = "0" }
                                                        }, new { @class = "form-control col-md-4" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Employee (Type part of name)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.EmployeeName, new { @class = "form-control" })
                @Html.HiddenFor(m => m.EmployeeId)
            </div>
            <div class="col-md-4">
                <div class="card-header" id="headingOne">
                    <button class="btn btn-link  collapsed" type="button" data-toggle="collapse" data-target="#collapseOne"
                            aria-expanded="false" aria-controls="collapseOne">
                        Filter Items List by <font color="red">Items For</font> and <font color="red">Active Status</font>
                    </button>
                    <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordionExample">
                        @Html.DropDownList("ItemFor", (SelectList)ViewBag.ItemForList, "Any", new { @class = "form-control col-md-4" })
                        @Html.DropDownList("activeStatus", new List<SelectListItem>
                                                        {
                                                        new SelectListItem{ Text="Any", Value = "-1", Selected = true },
                                                        new SelectListItem{ Text="Active", Value = "1" },
                                                        new SelectListItem{ Text="Not-Active", Value = "0" }
                                                        }, new { @class = "form-control col-md-4" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("From", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownListFor(m => m.FromTime, (SelectList)ViewBag.FromToTimeList, new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(model => model.FromTime, "", new { @class = "text-danger" })
            </div>
            @Html.Label("Counter", htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-1">
                @Html.EditorFor(model => model.MachineCounterFrom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MachineCounterFrom, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("To", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownListFor(m => m.ToTime, (SelectList)ViewBag.FromToTimeList, new { @class = "form-control col-md-6" })

                @Html.ValidationMessageFor(model => model.ToTime, "", new { @class = "text-danger" })
            </div>
            @Html.Label("Counter", htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-1">
                @Html.EditorFor(model => model.MachineCounterTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MachineCounterTo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                <input type="submit" value="Save" class="btn btn-info" />
            </div>
        </div>

        <hr />
    </div>
}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts{


    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="/resources/demos/style.css">
    <style>
        .ui-autocomplete-loading {
            background: white url("images/ui-anim_basic_16x16.gif") right center no-repeat;
        }
    </style>
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script>
        $(document).ready(function () {
            $("#ItemName").autocomplete({
            source: function(request, response) {
    $.ajax({
                    url: '@Url.Action("GetItems", "Production")',
    datatype: "json",
    data:
                    {
        term: request.term,
        itemFor: $("#ItemFor").val(),
        activeStatus:$("#activeStatus").val()
    },
    success: function(data) {
                        response($.map(data, function(val, item) {
                            return {
                                label: val.ItemName,
        value: val.ItemName,
    ItemId: val.ItemId
                            }
                        }))
    }
                })    },
    select: function(event, ui) {
    $("#ItemId").val(ui.item.ItemId);
            }
        });
    });


        $(document).ready(function () {
        $("#EmployeeName").autocomplete({
            source: function(request, response) {
    $.ajax({
                    url: '@Url.Action("GetEmployees", "Production")',
    datatype: "json",
    data:
                    {
                        term: request.term
    },
    success: function(data) {
                        response($.map(data, function(val, item) {
                            return {
                                label: val.EmployeeName,
        value: val.EmployeeName,
    EmployeeId: val.EmployeeId
                            }
                        }))
    }
                })    },
    select: function(event, ui) {
        $("#EmployeeId").val(ui.item.EmployeeId);
            }
        });
    });



    </script>
}