
@model RanmoDB.ProductionData

@using (Html.BeginForm())
{
    <div class="form-group">
        @Html.Label("Item (Type part of name)", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.TextBox("ItemName", new { @class = "form-control" })
            @*@Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })*@
            @Html.HiddenFor(m => m.ItemId)
        </div>
        <div class="col-md-4">


            <div class="card-header" id="headingOne">
                <button class="btn btn-link  collapsed" type="button" data-toggle="collapse" data-target="#collapseOne"
                        aria-expanded="false" aria-controls="collapseOne">
                    Filter Items List by <font color="red">Items For</font> and <font color="red">Active Status</font>
                </button>
                <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordionExample">

                    @Html.DropDownList("ItemFor", (SelectList)ViewBag.ItemForList, "Any", new { @class = "form-control col-md-4" })
                    @Html.DropDownList("activeStatus", new List<SelectListItem>
                            {
                            new SelectListItem{ Text="Any", Value = "-1", Selected = true },
                            new SelectListItem{ Text="Active", Value = "1" },
                            new SelectListItem{ Text="Not-Active", Value = "0" }
                            }, new { @class = "form-control col-md-4" })
                </div>
            </div>

        </div>
    </div>

}
<a id="t" class="btn btn-success" data-toggle="modal"><i style="vertical-align: -7px;" class="material-icons">&#xE147;</i> Test</a>




@*<script type="text/javascript" src="@Url.Content("~/Views/Production/TestJSFile.js")"></script>*@
@*<script src="~/Views/Production/TestJSFile.js"></script>*@
@*@Url.Content("~/Views/Production/TestJSFile.js")*@
@*@Scripts.Render("~/Views/Production/TestJSFile.js")*@



@section scripts{
    <script>

$(document).ready(function () {
    $("#ItemName").autocomplete({
        source: function (request, response) {
            $.ajax({
                url: '@Url.Action("GetItems", "Production")',
                datatype: "json",
                data:
                {
                    term: request.term,
                    itemFor: $("#ItemFor").val(),
                    activeStatus: $("#activeStatus").val()
                },
                success: function (data) {
                    response($.map(data, function (val, item) {
                        return {
                            label: val.ItemName,
                            value: val.ItemName,
                            ItemId: val.ItemId
                        }
                    }))
                }
            })
        },
        select: function (event, ui) {
            $("#ItemId").val(ui.item.ItemId);
        }
    });
});


    </script>

    @*works*@
    @*<script type="text/javascript" src="~/Scripts/TestJSFile.js"></script>
        <script src="~/Scripts/TestJSFile.js"></script>*@
    @*<script type="text/javascript" src="~/Views/Production/TestJSFile2.js"></script>*@

    @*<script src="~/Scripts/TestJSFile.js"></script>*@
}




@*@model RanmoDB.ProductionData


    <script type="text/javascript" src="@Url.Content("~/Views/Production/TestJSFile.js")"></script>
    <script type="text/javascript" src="~/Views/Production/TestJSFile.js"></script>
    @Url.Content("~/Views/Production/TestJSFile.js")
    @Scripts.Render("~/Views/Production/TestJSFile.js")


    <script type="text/javascript" src="@Url.Content("~/Scripts/TestJSFile.js")"></script>
    <script type="text/javascript" src="~/Scripts/TestJSFile.js"></script>
    @Url.Content("~/Scripts/TestJSFile.js")
    @Scripts.Render("~/Scripts/TestJSFile.js")


        @{
            ViewBag.Title = "Details";
        }

        <h2>Details</h2>

        <div>
            <h4>ProductionData</h4>
            <hr />
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Timestamp)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Timestamp)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.WorkStartDate)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.WorkStartDate)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.ShiftDN)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ShiftDN)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.MachineId)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.MachineId)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.ItemId)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ItemId)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.EmployeeId)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.EmployeeId)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.FromTime)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.FromTime)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.MachineCounterFrom)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.MachineCounterFrom)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.ToTime)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ToTime)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.MachineCounterTo)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.MachineCounterTo)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.TotalDamaged)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.TotalDamaged)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.DownTimeMinutes)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.DownTimeMinutes)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.DownTimeReason)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.DownTimeReason)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Notes)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Notes)
                </dd>

            </dl>
        </div>
        <p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
            @Html.ActionLink("Back to List", "Index")
        </p>*@
